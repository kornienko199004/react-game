{"version":3,"sources":["common/models/models.ts","layouts/components/Main/assets/rsschool.svg","common/helpers/game.helper.ts","components/Game/components/Card/assets/1.png","components/Game/components/Card/assets/2.png","components/Game/components/Card/assets/3.png","components/Game/components/Card/assets/4.png","components/Game/components/Card/assets/5.png","components/Game/components/Card/assets/6.png","components/Game/components/Card/assets/7.png","components/Game/components/Card/assets/8.png","components/Game/components/Card/assets/9.png","components/Game/components/Card/assets/10.png","components/Game/components/Card/assets/11.png","components/Game/components/Card/assets/12.png","components/Game/components/Card/Card.tsx","components/Game/components/WinBanner/WinBanner.tsx","components/Game/assets/card_flip.mp3","components/Game/assets/cards_found.mp3","components/Game/Game.tsx","components/Autoplay/Autoplay.tsx","components/Settings/Settings.tsx","components/Statistics/Statistics.tsx","components/Footer/Footer.tsx","components/Header/Header.tsx","common/services/storage.service.ts","layouts/components/Main/assets/music.mp3","layouts/components/Main/assets/music.svg","layouts/components/Main/assets/sounds.svg","components/SoundsControllers/SoundsControllers.tsx","components/Menu/Menu.tsx","components/Breadcrumbs/Breadcrumbs.tsx","components/TopList/TopList.tsx","layouts/components/Main/Main.tsx","App.tsx","index.tsx"],"names":["Cards","routes","button","path","cards","card1","card2","card3","card4","card5","card6","card7","card8","card9","card10","card11","card12","generateCards","settings","size","width","height","uniqCards","count","cardsCopy","mixedCards","i","cardToInsert","Math","floor","random","length","image","splice","isFlipped","id","found","generateUniqCards","tempCards","map","card","shortid","addZero","val","String","formatTime","sec","seconds","cardsMap","Card","props","cardClick","imgName","animationOn","className","onClick","src","alt","Transition","React","forwardRef","ref","Slide","direction","WinBanner","useState","open","setOpen","history","useHistory","Dialog","TransitionComponent","keepMounted","aria-labelledby","aria-describedby","DialogTitle","DialogContent","DialogContentText","attempts","time","DialogActions","Button","push","color","Game","state","storageService","flipSound","foundSound","timer","animationCheck","currentCard","firstCard","secondCard","pauseHandler","setState","startTime","data","paused","fullScreenToggle","fullScreen","isResumed","savedGameData","loadGame","haveWin","Audio","flipCard","volume","soundsVolume","foundPair","cardId","cardIndex","this","findIndex","soundsOn","play","changedCard","slice","prevState","newState","successGuess","win","checkWin","autoPlay","onWinHandler","saveGame","acceptedCards","filter","item","changeFlipped","setTimeout","autoPlaying","delay","flippedCards","tick","clearTimeout","points","sqrt","Number","toFixed","score","getScore","fieldSize","getFieldSizeString","onWin","variant","IconButton","component","FullscreenExit","Fullscreen","getFieldSize","Component","withRouter","Autoplay","isPaused","BootstrapInput","withStyles","theme","createStyles","root","marginTop","spacing","input","borderRadius","position","backgroundColor","palette","background","paper","border","fontSize","padding","transition","transitions","create","fontFamily","join","borderColor","boxShadow","InputBase","fieldsSettings","timeSettings","themeSettings","soundsSettings","soundsSettingsList","option","MenuItem","value","soundVolumeMap","low","medium","high","soundVolumeReverseMap","Settings","updateSettings","playerName","userName","setUserName","setFieldSize","showTime","setShowTime","setTheme","sounds","setSoundsVolume","musicVolume","music","setMusicVolume","handleChange","event","target","name","FormControl","TextField","label","onChange","InputLabel","Select","labelId","split","newSettings","useStyles","makeStyles","table","minWidth","Statistics","classes","dataSource","getStatisticsData","sort","a","b","TableContainer","Paper","Table","aria-label","TableHead","TableRow","TableCell","align","TableBody","row","index","scope","moment","createAt","format","Footer","href","rel","logo","Header","children","DEFAULT_SETTINGS","soundOn","musicOn","SETTINGS_KEY","GAME_KEY","STATISTICS_GAME_KEY","StorageService","settingsObj","savedSettings","loadSettings","saveSettings","soundToggle","musicToggle","game","localStorage","setItem","JSON","stringify","gameData","getItem","parse","clearSavedGame","statisticsData","Date","toISOString","addDataToStatistics","addDataToDataBase","fetch","method","response","json","removeItem","Error","e","body","headers","ok","console","log","SoundsControllers","soundsIcon","musicIcon","soundsToggle","Tooltip","title","maxWidth","margin","ListItemLink","ListItem","Menu","resumeHandler","navigationLinkHandler","List","ListItemText","primary","BreadCrumbs","pathname","location","Breadcrumbs","Link","Typography","TopList","setData","useEffect","getTopData","getNote","Main","musicPlayer","wrapperRef","pausedHandler","currentGameData","preventDefault","updateSettingsHandler","pause","soundsOff","musicOff","changeTheme","newTheme","loop","code","window","addEventListener","hotKeysListener","bind","element","exact","rsschool","App","match","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ac491d83.chunk.js","sourcesContent":["export interface IRouterItem {\r\n  button: string;\r\n  path: string;\r\n}\r\n\r\nexport enum Cards {\r\n  'card1' = 'card1',\r\n  'card2' = 'card2',\r\n  'card3' = 'card3',\r\n  'card4' = 'card4',\r\n  'card5' = 'card5',\r\n  'card6' = 'card6',\r\n  'card7' = 'card7',\r\n  'card8' = 'card8',\r\n  'card9' = 'card9',\r\n  'card10' = 'card10',\r\n  'card11' = 'card11',\r\n  'card12' = 'card12',\r\n}\r\n\r\nexport interface ICard {\r\n  image: Cards,\r\n  isFlipped: boolean,\r\n  id: string,\r\n  found: boolean;\r\n}\r\n\r\nexport const routes: IRouterItem[] = [\r\n  {\r\n    button: 'New Game',\r\n    path: '/game',\r\n  },\r\n  {\r\n    button: 'Autoplay',\r\n    path: '/autoplay',\r\n  },\r\n  {\r\n    button: 'Settings',\r\n    path: '/settings',\r\n  },\r\n  {\r\n    button: 'Statistics',\r\n    path: 'statistics',\r\n  },\r\n  {\r\n    button: 'Top List',\r\n    path: 'top',\r\n  },\r\n];\r\n\r\nexport interface ISettings {\r\n  width: number;\r\n  height: number;\r\n  delay: number;\r\n  theme: string;\r\n  soundOn: boolean;\r\n  musicOn: boolean;\r\n  soundsVolume: number;\r\n  musicVolume: number;\r\n  playerName: string;\r\n}\r\n\r\nexport interface IGameData {\r\n  cards: ICard[];\r\n  time: number;\r\n  attempts: number;\r\n  settings: ISettings;\r\n  startTime?: boolean;\r\n}\r\n\r\nexport interface IGameWinData {\r\n  time: number;\r\n  attempts: number;\r\n  score: number;\r\n  fieldSize: string;\r\n}\r\n\r\nexport interface IGameStatistics extends IGameWinData {\r\n  createAt: string;\r\n  playerName: string;\r\n}\r\n","export default __webpack_public_path__ + \"static/media/rsschool.995196dd.svg\";","import shortid from \"shortid\";\r\nimport { Cards, ICard, ISettings } from \"../models/models\";\r\n\r\nconst cards: Cards[] = [\r\n  Cards.card1,\r\n  Cards.card2,\r\n  Cards.card3,\r\n  Cards.card4,\r\n  Cards.card5,\r\n  Cards.card6,\r\n  Cards.card7,\r\n  Cards.card8,\r\n  Cards.card9,\r\n  Cards.card10,\r\n  Cards.card11,\r\n  Cards.card12\r\n];\r\n\r\nconst generateUniqCards = (count: number): ICard[] => {\r\n  const cardsCopy: Cards[] = [...cards];\r\n  let mixedCards: ICard[] = [];\r\n\r\n  for (let i = 0; i < count; i += 1) {\r\n    const cardToInsert: number = Math.floor(Math.random() * cardsCopy.length);\r\n    mixedCards = [\r\n      ...mixedCards,\r\n      {\r\n        image: cardsCopy.splice(cardToInsert, 1)[0],\r\n        isFlipped: true,\r\n        id: '',\r\n        found: false\r\n      }\r\n    ];\r\n  }\r\n  return mixedCards;\r\n};\r\n\r\nexport const generateCards = (settings: ISettings): ICard[] => {\r\n  const size = settings.width * settings.height;\r\n  const count = size / 2;\r\n\r\n  const uniqCards: ICard[] = generateUniqCards(count);\r\n\r\n  let tempCards: ICard[] = [...uniqCards, ...uniqCards];\r\n  let mixedCards: ICard[] = [];\r\n\r\n  for (let i = 0; i < size; i += 1) {\r\n    const cardToInsert: number = Math.floor(Math.random() * tempCards.length);\r\n    mixedCards = [...mixedCards, tempCards.splice(cardToInsert, 1)[0]];\r\n  }\r\n\r\n  mixedCards = mixedCards.map(card => ({ ...card, id: shortid() }));\r\n  return mixedCards;\r\n};\r\n\r\nconst addZero = (val: number) => {\r\n  return String(val).length > 1 ? val : `0${val}`;\r\n};\r\n\r\nexport const formatTime = (sec: number): string => {\r\n  const seconds = sec % 60;\r\n  const minutes = (sec - seconds) / 60;\r\n  return `${addZero(minutes)} : ${addZero(seconds)}`;\r\n};\r\n","export default __webpack_public_path__ + \"static/media/1.780fbbe5.png\";","export default __webpack_public_path__ + \"static/media/2.083423e9.png\";","export default __webpack_public_path__ + \"static/media/3.7d0852cb.png\";","export default __webpack_public_path__ + \"static/media/4.1c969403.png\";","export default __webpack_public_path__ + \"static/media/5.43b6339b.png\";","export default __webpack_public_path__ + \"static/media/6.067a780e.png\";","export default __webpack_public_path__ + \"static/media/7.841f30d3.png\";","export default __webpack_public_path__ + \"static/media/8.3363944a.png\";","export default __webpack_public_path__ + \"static/media/9.8c30acfe.png\";","export default __webpack_public_path__ + \"static/media/10.e9117e8e.png\";","export default __webpack_public_path__ + \"static/media/11.f1e1602a.png\";","export default __webpack_public_path__ + \"static/media/12.5ad43028.png\";","import React from 'react';\r\nimport './card.scss';\r\nimport card1 from './assets/1.png';\r\nimport card2 from './assets/2.png';\r\nimport card3 from './assets/3.png';\r\nimport card4 from './assets/4.png';\r\nimport card5 from './assets/5.png';\r\nimport card6 from './assets/6.png';\r\nimport card7 from './assets/7.png';\r\nimport card8 from './assets/8.png';\r\nimport card9 from './assets/9.png';\r\nimport card10 from './assets/10.png';\r\nimport card11 from './assets/11.png';\r\nimport card12 from './assets/12.png';\r\nimport { Cards } from '../../../../common/models/models';\r\n\r\nconst cardsMap = {\r\n  [Cards.card1]: card1,\r\n  [Cards.card2]: card2,\r\n  [Cards.card3]: card3,\r\n  [Cards.card4]: card4,\r\n  [Cards.card5]: card5,\r\n  [Cards.card6]: card6,\r\n  [Cards.card7]: card7,\r\n  [Cards.card8]: card8,\r\n  [Cards.card9]: card9,\r\n  [Cards.card10]: card10,\r\n  [Cards.card11]: card11,\r\n  [Cards.card12]: card12,\r\n}\r\n\r\ninterface IProps {\r\n  cardClick(): void;\r\n  isFlipped: boolean;\r\n  imgName: Cards;\r\n  found: boolean;\r\n  animationOn: boolean;\r\n}\r\n\r\nexport default function Card(props: IProps) {\r\n  const { cardClick, isFlipped, imgName, found, animationOn } = props;\r\n  return (\r\n    <div\r\n      className={\r\n        `card-wrapper ${found && animationOn ? 'card-wrapper_hide' : ''}${found && !animationOn ? 'card-wrapper_display_none' : ''}`\r\n        }\r\n        onClick={() => { !found && cardClick() }}>\r\n      <div className={\"card\" + (isFlipped ? \" flipped\" : \"\")}>\r\n        <div className=\"card__back\"></div>\r\n        <div className=\"card__front\">\r\n          <img src={cardsMap[imgName]} className=\"card__image\" alt=\"card__image\" />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport Slide from '@material-ui/core/Slide';\r\nimport { TransitionProps } from '@material-ui/core/transitions';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nconst Transition = React.forwardRef(function Transition(\r\n  props: TransitionProps & { children?: React.ReactElement<any, any> },\r\n  ref: React.Ref<unknown>,\r\n) {\r\n  return <Slide direction=\"down\" ref={ref} {...props} />;\r\n});\r\nexport default function WinBanner(props: { attempts: number, time: number }) {\r\n  const [open, setOpen] = React.useState(true);\r\n  const history = useHistory();\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n    history.push('/');\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Dialog\r\n        open={open}\r\n        TransitionComponent={Transition}\r\n        keepMounted\r\n        aria-labelledby=\"alert-dialog-slide-title\"\r\n        aria-describedby=\"alert-dialog-slide-description\"\r\n      >\r\n        <DialogTitle id=\"alert-dialog-slide-title\">{\"You win!!!\"}</DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText id=\"alert-dialog-slide-description\">\r\n            You have made <strong>{props.attempts}</strong> and spend <strong>{props.time}</strong> seconds.\r\n          </DialogContentText>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={handleClose} color=\"primary\">\r\n              OK\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n}\r\n","export default __webpack_public_path__ + \"static/media/card_flip.47a5e52c.mp3\";","export default __webpack_public_path__ + \"static/media/cards_found.04617d20.mp3\";","import React from 'react';\r\nimport { RouteComponentProps, withRouter } from 'react-router-dom';\r\nimport { formatTime } from '../../common/helpers/game.helper';\r\nimport { ICard, IGameData, IGameWinData, ISettings } from '../../common/models/models';\r\nimport StorageService from '../../common/services/storage.service';\r\nimport Card from './components/Card/Card';\r\nimport WinBanner from './components/WinBanner/WinBanner';\r\nimport './game.scss';\r\n// @ts-ignore\r\nimport flipCard from './assets/card_flip.mp3';\r\n// @ts-ignore\r\nimport foundPair from './assets/cards_found.mp3';\r\nimport { Button, IconButton } from '@material-ui/core';\r\nimport { Fullscreen, FullscreenExit } from '@material-ui/icons';\r\n\r\ninterface IState {\r\n  cards: ICard[];\r\n  size: number;\r\n  firstCard: ICard | null;\r\n  secondCard: ICard | null;\r\n  isResumed: boolean;\r\n  startTime: boolean;\r\n  attempts: number;\r\n  time: number;\r\n  haveWin: boolean;\r\n  fullScreen: boolean;\r\n}\r\n\r\ninterface IProps extends RouteComponentProps {\r\n  settings: ISettings;\r\n  cards: ICard[];\r\n  firstCard: ICard | null;\r\n  secondCard: ICard | null;\r\n  paused(data: IGameData): void;\r\n  isResumed: boolean;\r\n  attempts: number;\r\n  time: number;\r\n  storageService: StorageService;\r\n  soundsOn: boolean;\r\n  autoPlay?: boolean;\r\n}\r\n\r\nclass Game extends React.Component<IProps> {\r\n  state: IState;\r\n  storageService: StorageService;\r\n  flipSound: any;\r\n  foundSound: any;\r\n  timer: ReturnType<typeof setTimeout> | undefined;\r\n\r\n  constructor(props: IProps) {\r\n    super(props);\r\n    let { settings, cards, attempts, time } = props;\r\n    const { firstCard, secondCard, isResumed, storageService } = props;\r\n    this.storageService = storageService;\r\n    let startTime = isResumed;\r\n\r\n    if (cards.length === 0) {\r\n      const savedGameData: IGameData | null = this.storageService.loadGame();\r\n      if (savedGameData) {\r\n        settings = savedGameData.settings;\r\n        cards = savedGameData.cards;\r\n        attempts = savedGameData.attempts;\r\n        time = savedGameData.time;\r\n        startTime = savedGameData.startTime || false;\r\n      } else {\r\n        this.props.history.push('/');\r\n      }\r\n    }\r\n\r\n    const { width, height } = settings;\r\n    const size: number = width * height;\r\n    this.state = {\r\n      size,\r\n      cards,\r\n      firstCard,\r\n      secondCard,\r\n      isResumed,\r\n      startTime,\r\n      attempts,\r\n      time,\r\n      haveWin: false,\r\n      fullScreen: false,\r\n    };\r\n\r\n    this.flipSound = new Audio(flipCard);\r\n    this.flipSound.volume = settings.soundsVolume;\r\n    this.foundSound = new Audio(foundPair);\r\n    this.foundSound.volume = settings.soundsVolume;\r\n  }\r\n\r\n  changeFlipped(cardId: string) {\r\n    const cardIndex = this.state.cards.findIndex(({ id }) => id === cardId);\r\n\r\n    if (this.state.cards[cardIndex].isFlipped) {\r\n      return;\r\n    }\r\n\r\n    if (this.props.soundsOn) {\r\n      this.flipSound.volume = this.storageService.settings.soundsVolume;\r\n      this.flipSound.play();\r\n    }\r\n\r\n    const changedCard: ICard = { ...this.state.cards[cardIndex], isFlipped: !this.state.cards[cardIndex].isFlipped };\r\n    let cardsCopy = this.state.cards.slice();\r\n    cardsCopy.splice(cardIndex, 1, changedCard);\r\n\r\n    this.setState((prevState: IState) => {\r\n      const newState = {\r\n        ...prevState,\r\n        cards: cardsCopy,\r\n      };\r\n      if (!prevState.firstCard && changedCard.isFlipped) {\r\n        return { ...newState, firstCard: changedCard };\r\n      }\r\n      if (!prevState.secondCard && changedCard.isFlipped) {\r\n        let successGuess: boolean = false;\r\n        if (prevState.firstCard && prevState.firstCard.image === changedCard.image) {\r\n          if (this.props.soundsOn) {\r\n            this.flipSound.volume = this.storageService.settings.soundsVolume;\r\n            this.foundSound.play();\r\n          }\r\n          successGuess = true;\r\n        }\r\n        cardsCopy = cardsCopy.map((card) => {\r\n          if (card.id === (prevState.firstCard as ICard).id || card.id === (changedCard as ICard).id) {\r\n            return { ...card, found: successGuess };\r\n          }\r\n          return card;\r\n        });\r\n        return {\r\n          ...prevState,\r\n          cards: cardsCopy,\r\n          secondCard: { ...changedCard, found: successGuess },\r\n          firstCard: { ...prevState.firstCard, found: successGuess },\r\n        };\r\n      }\r\n\r\n      if (prevState.firstCard && prevState.secondCard) {\r\n        cardsCopy = cardsCopy.map((card) => {\r\n          if (card.id === (prevState.firstCard as ICard).id || card.id === (prevState.secondCard as ICard).id) {\r\n            return { ...card, isFlipped: false };\r\n          }\r\n          return card;\r\n        });\r\n        return {\r\n          ...prevState,\r\n          cards: cardsCopy,\r\n          firstCard: changedCard,\r\n          secondCard: null,\r\n        };\r\n      }\r\n\r\n      return {\r\n        ...prevState,\r\n      }\r\n    }, () => {\r\n      this.setState({\r\n        attempts: this.state.attempts + 1,\r\n      }, () => {\r\n        const win = this.checkWin();\r\n        if (win) {\r\n          this.setState({\r\n            haveWin: win,\r\n          });\r\n          if (!this.props.autoPlay) {\r\n            this.onWinHandler();\r\n          }\r\n        } else {\r\n          this.saveGame();\r\n        }\r\n      })\r\n    });\r\n  }\r\n\r\n  getFieldSize() {\r\n    const { size } = this.state;\r\n\r\n    if (size === 24) {\r\n      return 'large';\r\n    }\r\n    if (size === 18) {\r\n      return 'medium';\r\n    }\r\n\r\n    return 'small';\r\n  }\r\n\r\n  autoPlaying() {\r\n    const { cards } = this.state;\r\n    const acceptedCards = cards.filter((item) => !item.found && !item.isFlipped);\r\n    if (acceptedCards.length > 0) {\r\n      const index = Math.floor(Math.random() * acceptedCards.length);\r\n      const card = acceptedCards[index];\r\n      this.changeFlipped(card.id);\r\n\r\n      setTimeout(() => {\r\n        this.autoPlaying();\r\n      }, 1000);\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    const { delay } = this.props.settings;\r\n    this.timer = setTimeout(() => {\r\n      const flippedCards: ICard[] = this.state.cards.map((card) => ({ ...card, isFlipped: false }));\r\n      this.setState({\r\n        cards: flippedCards,\r\n        startTime: true,\r\n      }, () => {\r\n        if (this.props.autoPlay) {\r\n          setTimeout(() => {\r\n            this.autoPlaying();\r\n          }, 1000);\r\n        }\r\n      });\r\n    }, delay * 1000);\r\n    this.tick();\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    if (this.timer) {\r\n      clearTimeout(this.timer);\r\n    }\r\n  }\r\n\r\n  animationCheck = (currentCard: ICard): boolean => {\r\n    const { firstCard, secondCard } = this.state;\r\n    if (firstCard && secondCard) {\r\n      if (firstCard.image === secondCard.image && firstCard.image === currentCard.image) {\r\n        return true;\r\n      }\r\n    }\r\n    return false;\r\n  }\r\n\r\n  pauseHandler = () => {\r\n    this.setState({\r\n      startTime: false,\r\n    });\r\n\r\n    const data: IGameData = {\r\n      cards: this.state.cards,\r\n      time: this.state.time,\r\n      attempts: this.state.attempts,\r\n      settings: this.props.settings,\r\n    };\r\n    this.props.paused(data);\r\n  };\r\n\r\n  tick() {\r\n    setTimeout(() => {\r\n      if (this.state.startTime && !this.state.haveWin) {\r\n        this.setState({\r\n          time: this.state.time + 1,\r\n        });\r\n      }\r\n      this.tick();\r\n    }, 1000);\r\n  }\r\n\r\n  saveGame() {\r\n    const data: IGameData = {\r\n      cards: this.state.cards,\r\n      time: this.state.time,\r\n      attempts: this.state.attempts,\r\n      settings: this.props.settings,\r\n      startTime: this.state.startTime,\r\n    };\r\n\r\n    this.storageService.saveGame(data);\r\n  }\r\n\r\n  checkWin() {\r\n    const haveWin = this.state.cards.filter((card: ICard) => !card.found).length === 0;\r\n    return haveWin;\r\n  }\r\n\r\n  getFieldSizeString(): string {\r\n    const { settings } = this.props;\r\n    return `${settings.width}x${settings.height}`;\r\n  }\r\n\r\n  getScore(): number {\r\n    const { settings } = this.props;\r\n    const { time, attempts } = this.state;\r\n    const points = ((settings.width * settings.height * settings.delay) ** 2) / (Math.sqrt(time * attempts));\r\n    return Number(points.toFixed(0));\r\n  }\r\n\r\n  onWinHandler() {\r\n    const data: IGameWinData = {\r\n      time: this.state.time,\r\n      attempts: this.state.attempts,\r\n      score: this.getScore(),\r\n      fieldSize: this.getFieldSizeString(),\r\n    };\r\n    this.storageService.onWin(data);\r\n  }\r\n\r\n  fullScreenToggle = () => {\r\n    this.setState({\r\n      fullScreen: !this.state.fullScreen,\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const { cards, fullScreen } = this.state;\r\n    const { autoPlay } = this.props;\r\n\r\n    return (\r\n      <div className={`game ${fullScreen ? 'game_fullscreen' : ''}`}>\r\n        <div className=\"statistics\">\r\n          <div className=\"statistics__inner\">\r\n            <Button\r\n              variant=\"contained\"\r\n              className=\"pause-button\"\r\n              onClick={this.pauseHandler}>{autoPlay ? 'Stop' : 'Pause'}</Button>\r\n          </div>\r\n          <div className=\"statistics__inner\">\r\n            <div className=\"score-wrapper\">\r\n              <p className=\"score-wrapper__caption\">Attempts:</p>\r\n              <p className=\"score-wrapper__score\">{this.state.attempts}</p>\r\n            </div>\r\n\r\n            <div className=\"time-wrapper\">\r\n              <p className=\"time-wrapper__caption\">Time:</p> <p className=\"time-wrapper__time\">{formatTime(this.state.time)}</p>\r\n            </div>\r\n          </div>\r\n          <div className=\"statistics__inner\">\r\n            <IconButton color=\"primary\" onClick={this.fullScreenToggle} component=\"span\">\r\n              {fullScreen ? <FullscreenExit /> : <Fullscreen />}\r\n            </IconButton>\r\n          </div>\r\n        </div>\r\n        <div className={`game-field game-field_${this.getFieldSize()}`}>\r\n          {autoPlay && <div className=\"game__overlay\"></div>}\r\n          {cards.map((card: ICard) => (\r\n            <div className=\"game-field__item\" key={card.id}>\r\n              <Card\r\n                cardClick={() => this.changeFlipped(card.id)}\r\n                isFlipped={card.isFlipped}\r\n                imgName={card.image}\r\n                found={card.found}\r\n                animationOn={this.animationCheck(card)}\r\n              />\r\n            </div>\r\n          ))}\r\n        </div>\r\n        {this.state.haveWin && <WinBanner time={this.state.time} attempts={this.state.attempts} />}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(Game);","import React from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { generateCards } from '../../common/helpers/game.helper';\r\nimport { ICard, ISettings } from '../../common/models/models';\r\nimport StorageService from '../../common/services/storage.service';\r\nimport Game from '../Game/Game';\r\n\r\ninterface IState {\r\n  cards: ICard[];\r\n  firstCard: ICard | null;\r\n  secondCard: ICard | null;\r\n  settings: ISettings;\r\n  isPaused: boolean;\r\n  isResumed: boolean;\r\n  time: number;\r\n  attempts: number;\r\n  // theme: string;\r\n  // musicOn: boolean;\r\n  soundsOn: boolean;\r\n  autoPlay: boolean;\r\n}\r\n\r\ninterface IProps {\r\n  storageService: StorageService;\r\n}\r\n\r\nexport default function Autoplay(props: IProps) {\r\n  const { storageService } = props;\r\n  const settings = storageService.settings;\r\n  const cards: ICard[] = generateCards(settings);\r\n\r\n  const state: IState = {\r\n    cards,\r\n    firstCard: null,\r\n    secondCard: null,\r\n    settings,\r\n    time: 0,\r\n    attempts: 0,\r\n    isPaused: false,\r\n    isResumed: false,\r\n    soundsOn: false,\r\n    autoPlay: true,\r\n  };\r\n\r\n  const history = useHistory();\r\n\r\n  const pausedHandler = () => {\r\n    history.push('/');\r\n  };\r\n\r\n  return (\r\n    <>\r\n        <Game\r\n        {...{ ...state, paused: pausedHandler, storageService } }\r\n      />\r\n    </>\r\n  );\r\n}\r\n","import { Button, createStyles, FormControl, InputBase, InputLabel, MenuItem, Select, TextField, Theme, withStyles } from '@material-ui/core';\r\nimport React from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { ISettings } from '../../common/models/models';\r\nimport StorageService from '../../common/services/storage.service';\r\nimport './settings.scss';\r\n\r\nconst BootstrapInput = withStyles((theme: Theme) =>\r\n  createStyles({\r\n    root: {\r\n      'label + &': {\r\n        marginTop: theme.spacing(3),\r\n      },\r\n    },\r\n    input: {\r\n      borderRadius: 4,\r\n      position: 'relative',\r\n      backgroundColor: theme.palette.background.paper,\r\n      border: '1px solid #ced4da',\r\n      fontSize: 16,\r\n      padding: '10px 26px 10px 12px',\r\n      transition: theme.transitions.create(['border-color', 'box-shadow']),\r\n      // Use the system font instead of the default Roboto font.\r\n      fontFamily: [\r\n        '-apple-system',\r\n        'BlinkMacSystemFont',\r\n        '\"Segoe UI\"',\r\n        'Roboto',\r\n        '\"Helvetica Neue\"',\r\n        'Arial',\r\n        'sans-serif',\r\n        '\"Apple Color Emoji\"',\r\n        '\"Segoe UI Emoji\"',\r\n        '\"Segoe UI Symbol\"',\r\n      ].join(','),\r\n      '&:focus': {\r\n        borderRadius: 4,\r\n        borderColor: '#80bdff',\r\n        boxShadow: '0 0 0 0.2rem rgba(0,123,255,.25)',\r\n      },\r\n    },\r\n  }),\r\n)(InputBase);\r\n\r\nconst fieldsSettings: string[] = ['6x2', '6x3', '6x4'];\r\nconst fieldsSettingsList = () => fieldsSettings.map((option: string) => (\r\n  <MenuItem value={option} key={option}>{option}</MenuItem>\r\n));\r\n\r\nconst timeSettings: string[] = ['2', '3', '4', '5'];\r\nconst timeSettingsList = () => timeSettings.map((option: string) => (\r\n  <MenuItem value={option} key={option}>{option}</MenuItem>\r\n));\r\n\r\nconst themeSettings: string[] = ['dark', 'light'];\r\nconst themeSettingsList = () => themeSettings.map((option: string) => (\r\n  <MenuItem value={option} key={option}>{option}</MenuItem>\r\n));\r\n\r\nconst soundsSettings: string[] = ['low', 'medium', 'high'];\r\nconst soundsSettingsList = () => soundsSettings.map((option) => (\r\n  <MenuItem value={option} key={option}>{option}</MenuItem>\r\n));\r\n\r\nconst soundVolumeMap: { [k: string]: number } = {\r\n  low: 0.2,\r\n  medium: 0.5,\r\n  high: 1,\r\n};\r\n\r\nconst soundVolumeReverseMap: { [k: string]: string } = {\r\n  '0.2': 'low',\r\n  '0.5': 'medium',\r\n  '1': 'high',\r\n};\r\n\r\ninterface IProps {\r\n  storageService: StorageService;\r\n  updateSettings(settings: ISettings): void;\r\n}\r\nexport default function Settings(props: IProps) {\r\n  const { storageService, updateSettings } = props;\r\n  const settings = storageService.settings;\r\n\r\n  const size: string = `${settings.width}x${settings.height}`;\r\n\r\n  const [userName, setUserName] = React.useState(settings.playerName);\r\n  const [fieldSize, setFieldSize] = React.useState(size);\r\n  const [showTime, setShowTime] = React.useState(settings.delay);\r\n  const [theme, setTheme] = React.useState(settings.theme);\r\n  const [sounds, setSoundsVolume] = React.useState(soundVolumeReverseMap[settings.soundsVolume]);\r\n  const [music, setMusicVolume] = React.useState(soundVolumeReverseMap[settings.musicVolume]);\r\n  const history = useHistory();\r\n\r\n  const handleChange = (event: React.ChangeEvent<{ value: unknown }>) => {\r\n\r\n    switch ((event.target as any).name) {\r\n      case 'userName':\r\n        setUserName(event.target.value as string);\r\n        break;\r\n      case 'fieldSize':\r\n        setFieldSize(event.target.value as string);\r\n        break;\r\n      case 'showTime':\r\n        setShowTime(event.target.value as number);\r\n        break;\r\n      case 'theme':\r\n        setTheme(event.target.value as string);\r\n        break;\r\n      case 'sounds':\r\n        setSoundsVolume(event.target.value as string);\r\n        break;\r\n      case 'music':\r\n        setMusicVolume(event.target.value as string);\r\n        break;\r\n      default:\r\n        return;\r\n    }\r\n  };\r\n\r\n  const saveHandler = () => {\r\n    const [width, height] = fieldSize.split('x').map((item) => Number(item));\r\n    const newSettings: ISettings = {\r\n      ...settings,\r\n      playerName: userName,\r\n      width,\r\n      height,\r\n      delay: showTime,\r\n      theme,\r\n      soundsVolume: soundVolumeMap[sounds],\r\n      musicVolume: soundVolumeMap[music],\r\n    };\r\n    updateSettings(newSettings);\r\n    history.push('/');\r\n  };\r\n\r\n  return (\r\n    <div className=\"settings\">\r\n      <h2 className=\"settings__title\">Settings</h2>\r\n      <p className=\"settings__caption\">Input User Name</p>\r\n      <FormControl className=\"settings__form-control\">\r\n        <TextField\r\n          id=\"outlined-basic\"\r\n          label=\"User Name\"\r\n          variant=\"outlined\"\r\n          value={userName}\r\n          onChange={handleChange}\r\n          name=\"userName\"\r\n        />\r\n      </FormControl>\r\n      <p className=\"settings__caption\">Choose the field size</p>\r\n      <FormControl className=\"settings__form-control\">\r\n        <InputLabel id=\"demo-simple-select-label\">Field</InputLabel>\r\n        <Select\r\n          labelId=\"demo-simple-select-label\"\r\n          id=\"demo-simple-select\"\r\n          value={fieldSize}\r\n          onChange={handleChange}\r\n          name=\"fieldSize\"\r\n          input={<BootstrapInput />}\r\n        >\r\n          {fieldsSettingsList()}\r\n        </Select>\r\n      </FormControl>\r\n      <p className=\"settings__caption\">Choose time (sec) of the cards' being opened in the beginning</p>\r\n      <FormControl className=\"settings__form-control\">\r\n        <InputLabel id=\"demo-simple-select-label\">Time</InputLabel>\r\n        <Select\r\n          labelId=\"demo-simple-select-label\"\r\n          id=\"demo-simple-select\"\r\n          value={showTime}\r\n          onChange={handleChange}\r\n          name=\"showTime\"\r\n          input={<BootstrapInput />}\r\n        >\r\n          {timeSettingsList()}\r\n        </Select>\r\n      </FormControl>\r\n      <p className=\"settings__caption\">Choose the theme</p>\r\n      <FormControl className=\"settings__form-control\">\r\n        <InputLabel id=\"demo-simple-select-label\">Theme</InputLabel>\r\n        <Select\r\n          labelId=\"demo-simple-select-label\"\r\n          id=\"demo-simple-select\"\r\n          value={theme}\r\n          onChange={handleChange}\r\n          name=\"theme\"\r\n          input={<BootstrapInput />}\r\n        >\r\n          {themeSettingsList()}\r\n        </Select>\r\n      </FormControl>\r\n\r\n      <p className=\"settings__caption\">Choose music volume</p>\r\n      <FormControl className=\"settings__form-control\">\r\n        <InputLabel>Music volume</InputLabel>\r\n        <Select\r\n          value={music}\r\n          onChange={handleChange}\r\n          name=\"music\"\r\n          input={<BootstrapInput />}\r\n        >\r\n          {soundsSettingsList()}\r\n        </Select>\r\n      </FormControl>\r\n\r\n      <p className=\"settings__caption\">Choose sounds volume</p>\r\n      <FormControl className=\"settings__form-control\">\r\n        <InputLabel id=\"demo-simple-select-label\">Sounds volume</InputLabel>\r\n        <Select\r\n          value={sounds}\r\n          onChange={handleChange}\r\n          name=\"sounds\"\r\n          input={<BootstrapInput />}\r\n        >\r\n          {soundsSettingsList()}\r\n        </Select>\r\n      </FormControl>\r\n      <div className=\"settings__controls\">\r\n        <Button variant=\"contained\" color=\"primary\" onClick={saveHandler}>\r\n          Save\r\n        </Button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport StorageService from '../../common/services/storage.service';\r\nimport { IGameStatistics } from '../../common/models/models';\r\nimport moment from 'moment';\r\nimport shortid from 'shortid';\r\n\r\nconst useStyles = makeStyles({\r\n  table: {\r\n    minWidth: 375,\r\n  },\r\n});\r\n\r\nexport default function Statistics(props: { storageService: StorageService }) {\r\n  const classes = useStyles();\r\n  const statistics: IGameStatistics[] = props.storageService.getStatisticsData() || [];\r\n  const dataSource: IGameStatistics[] = statistics.slice().sort((a, b) => b.score - a.score).slice(0, 10);\r\n\r\n  return (\r\n    <div className=\"statistics-wrapper\">\r\n      <h1>Statistics</h1>\r\n    <TableContainer component={Paper}>\r\n      <Table className={classes.table} aria-label=\"simple table\">\r\n        <TableHead>\r\n          <TableRow>\r\n            <TableCell>№</TableCell>\r\n            <TableCell align=\"center\">Player&nbsp;Name</TableCell>\r\n            <TableCell align=\"center\">Score</TableCell>\r\n            <TableCell align=\"center\">Field&nbsp;Size</TableCell>\r\n            <TableCell align=\"center\">Attempts</TableCell>\r\n            <TableCell align=\"center\">Time&nbsp;(sec)</TableCell>\r\n            <TableCell align=\"center\">Date</TableCell>\r\n          </TableRow>\r\n        </TableHead>\r\n        <TableBody>\r\n          {dataSource.map((row: IGameStatistics, index: number) => (\r\n            <TableRow key={shortid()}>\r\n              <TableCell component=\"th\" scope=\"row\" align=\"left\"><b>{index + 1}</b></TableCell>\r\n              <TableCell align=\"center\">\r\n                {row.playerName}\r\n              </TableCell>\r\n              <TableCell align=\"center\">{row.score}</TableCell>\r\n              <TableCell align=\"center\">{row.fieldSize}</TableCell>\r\n              <TableCell align=\"center\">{row.attempts}</TableCell>\r\n              <TableCell align=\"center\">{row.time}</TableCell>\r\n              <TableCell align=\"center\">{moment(row.createAt).format('MMMM Do YYYY, HH:mm:ss')}</TableCell>\r\n            </TableRow>\r\n          ))}\r\n        </TableBody>\r\n      </Table>\r\n    </TableContainer>\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react';\r\n\r\nexport default function Footer(props: { logo: string }) {\r\n  return (\r\n    <div className=\"footer\">\r\n      <div className=\"footer__inner\">\r\n        <p className=\"feedback\">\r\n          Made by <a href=\"https://github.com/kornienko199004\" rel=\"noreferrer\" target=\"_blank\">kornienko199004</a> for\r\n    </p>\r\n        <div className=\"rsschool-logo\">\r\n          <a href=\"https://rs.school/js/\" rel=\"noreferrer\" target=\"_blank\">\r\n            <img src={props.logo} alt=\"rsschool\" />\r\n          </a>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react';\r\n\r\nexport default function Header(props: { children?: any }) {\r\n  return (\r\n\r\n    <div className=\"header\">\r\n      <div className=\"header__inner\">\r\n        <div className=\"logo\">\r\n          <p className=\"logo__title\">Memory Game</p>\r\n          <p className=\"logo__description\">train your memory</p>\r\n        </div>\r\n        {props.children}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import {\r\n  IGameData,\r\n  IGameStatistics,\r\n  IGameWinData,\r\n  ISettings\r\n} from '../models/models';\r\n\r\nconst DEFAULT_SETTINGS: ISettings = {\r\n  width: 6,\r\n  height: 4,\r\n  delay: 5,\r\n  theme: 'light',\r\n  soundOn: true,\r\n  musicOn: true,\r\n  soundsVolume: 0.2,\r\n  musicVolume: 0.2,\r\n  playerName: 'player',\r\n};\r\n\r\nconst SETTINGS_KEY = 'MEMORY_GAME_SETTINGS';\r\nconst GAME_KEY = 'MEMORY_GAME_GAME_DATA';\r\nconst STATISTICS_GAME_KEY = 'MEMORY_GAME_STATISTICS_GAME_DATA';\r\n\r\nexport default class StorageService {\r\n  settingsObj: ISettings = DEFAULT_SETTINGS;\r\n\r\n  constructor() {\r\n    const savedSettings: ISettings | null = this.loadSettings();\r\n    if (savedSettings) {\r\n      this.settingsObj = { ...savedSettings };\r\n    }\r\n  }\r\n\r\n  get settings(): ISettings {\r\n    return this.settingsObj;\r\n  }\r\n\r\n  public updateSettings(newSettings: ISettings) {\r\n    if (!newSettings) {\r\n      return;\r\n    }\r\n\r\n    this.saveSettings(newSettings);\r\n    this.settingsObj = { ...newSettings };\r\n  }\r\n\r\n  public soundsToggle(soundToggle: boolean) {\r\n    const newSettings: ISettings = {\r\n      ...this.settingsObj,\r\n      soundOn: soundToggle\r\n    };\r\n    this.saveSettings({ ...newSettings });\r\n    this.settingsObj = { ...newSettings };\r\n  }\r\n\r\n  public musicToggle(musicToggle: boolean) {\r\n    const newSettings: ISettings = {\r\n      ...this.settingsObj,\r\n      soundOn: musicToggle\r\n    };\r\n    this.saveSettings({ ...newSettings });\r\n    this.settingsObj = { ...newSettings };\r\n  }\r\n\r\n  public saveGame(game: IGameData): void {\r\n    localStorage.setItem(GAME_KEY, JSON.stringify(game));\r\n  }\r\n\r\n  public loadGame(): IGameData | null {\r\n    const gameData = localStorage.getItem(GAME_KEY);\r\n    if (gameData) {\r\n      return JSON.parse(gameData);\r\n    }\r\n    return null;\r\n  }\r\n\r\n  public onWin(data: IGameWinData): void {\r\n    this.clearSavedGame();\r\n    const statisticsData: IGameStatistics = {\r\n      ...data,\r\n      createAt: new Date().toISOString(),\r\n      playerName: this.settings.playerName,\r\n    };\r\n    this.addDataToStatistics(statisticsData);\r\n    this.addDataToDataBase(statisticsData);\r\n  }\r\n\r\n  public getStatisticsData(): IGameStatistics[] | null {\r\n    const statisticsData = localStorage.getItem(STATISTICS_GAME_KEY);\r\n    if (statisticsData) {\r\n      return JSON.parse(statisticsData);\r\n    }\r\n    return null;\r\n  }\r\n\r\n  public async getTopData(): Promise<IGameStatistics[] | null> {\r\n    const response = await fetch('/api/top/', {\r\n      method: 'GET',\r\n    });\r\n    const data = response.json();\r\n    return data;\r\n  }\r\n\r\n  private loadSettings(): ISettings | null {\r\n    const settings = localStorage.getItem(SETTINGS_KEY);\r\n    if (settings) {\r\n      return JSON.parse(settings);\r\n    }\r\n    return null;\r\n  }\r\n\r\n  private saveSettings(newSettings: ISettings): void {\r\n    localStorage.setItem(SETTINGS_KEY, JSON.stringify(newSettings));\r\n  }\r\n\r\n  private clearSavedGame(): void {\r\n    localStorage.removeItem(GAME_KEY);\r\n  }\r\n\r\n  private addDataToStatistics(data: IGameStatistics): void {\r\n    let statisticsData: IGameStatistics[];\r\n    try {\r\n      statisticsData = JSON.parse(\r\n        localStorage.getItem(STATISTICS_GAME_KEY) as string\r\n      );\r\n      if (!statisticsData) {\r\n        throw Error();\r\n      }\r\n    } catch (e) {\r\n      statisticsData = [];\r\n    }\r\n\r\n    statisticsData.push(data);\r\n    localStorage.setItem(STATISTICS_GAME_KEY, JSON.stringify(statisticsData));\r\n  }\r\n\r\n  private async addDataToDataBase(data: IGameStatistics): Promise<any> {\r\n    try {\r\n      const response = await fetch('/api/top/add', {\r\n        method: 'POST',\r\n        body: JSON.stringify(data),\r\n        headers: {\r\n          'Content-Type': 'application/json'\r\n        }\r\n      });\r\n      if (!response.ok) {\r\n        throw Error('Server Error');\r\n      }\r\n    } catch (e) {\r\n      console.log(e);\r\n    }\r\n  }\r\n}\r\n","export default __webpack_public_path__ + \"static/media/music.7c6d72bd.mp3\";","export default __webpack_public_path__ + \"static/media/music.b541995b.svg\";","export default __webpack_public_path__ + \"static/media/sounds.ce4378f6.svg\";","import { Tooltip } from '@material-ui/core';\r\nimport React from 'react';\r\n\r\ninterface IProps {\r\n  soundsIcon: string;\r\n  musicIcon: string;\r\n  soundsOn: boolean;\r\n  musicOn: boolean;\r\n  soundsToggle(): void;\r\n  musicToggle(): void;\r\n}\r\n\r\nexport default function SoundsControllers(props: IProps) {\r\n  const { soundsIcon, soundsOn, musicIcon, musicOn, soundsToggle, musicToggle } = props;\r\n  return (\r\n    <div className=\"game-controls\">\r\n    <Tooltip title=\"Sounds ON / OFF\">\r\n      <button\r\n        className={`game-controls__button ${soundsOn ? '' : 'game-controls__button_mute'}`}\r\n        onClick={soundsToggle}>\r\n        <img src={soundsIcon} alt=\"Sound ON / OFF\"/>\r\n      </button>\r\n    </Tooltip>\r\n    <Tooltip title=\"Music ON / OFF\" >\r\n      <button\r\n        className={`game-controls__button ${musicOn ? '' : 'game-controls__button_mute'}`}\r\n        onClick={musicToggle} >\r\n        <img src={musicIcon} alt=\"Music ON / OFF\"/>\r\n      </button>\r\n    </Tooltip>\r\n  </div>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport { routes } from '../../common/models/models';\r\nimport { createStyles, Theme, makeStyles } from '@material-ui/core/styles';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem, { ListItemProps } from '@material-ui/core/ListItem';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\n\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    root: {\r\n      width: '100%',\r\n      maxWidth: 500,\r\n      backgroundColor: theme.palette.background.paper,\r\n      margin: '0 auto',\r\n      marginTop: '70px',\r\n      boxShadow: '0 0 5px rgb(0, 0, 0, 0.7)',\r\n      borderRadius: '5px',\r\n      color: '#000',\r\n    },\r\n  }),\r\n);\r\n\r\ninterface IProps {\r\n  resumeHandler(): void;\r\n  isPaused: boolean;\r\n  navigationLinkHandler(e: React.MouseEvent, path: string, button: string): void;\r\n}\r\n\r\nfunction ListItemLink(props: ListItemProps<'a', { button?: true }>) {\r\n  return <ListItem button component=\"a\" {...props} />;\r\n}\r\n\r\nexport default function Menu(props: IProps) {\r\n  const classes = useStyles();\r\n  const { resumeHandler, isPaused, navigationLinkHandler } = props;\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <h1>Menu</h1>\r\n      <List component=\"nav\" aria-label=\"secondary mailbox folders\">\r\n        {isPaused && \r\n          (<ListItem button onClick={resumeHandler}>\r\n            <ListItemText primary=\"Resume\" />\r\n          </ListItem>)\r\n        }\r\n        {routes.map(({ button, path }) => (\r\n          <ListItemLink key={path} href={path} onClick={(e: React.MouseEvent) => navigationLinkHandler(e, path, button)}>\r\n            <ListItemText primary={button} />\r\n        </ListItemLink>\r\n        ))}\r\n      </List>\r\n    </div>\r\n  );\r\n}\r\n","import { Breadcrumbs, Typography, Link } from '@material-ui/core';\r\nimport React from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nexport default function BreadCrumbs(props: { location: { pathname: string }}) {\r\n  const history = useHistory();\r\n  const { location } = props;\r\n  const { pathname } = location;\r\n  return (\r\n    <div className=\"breadcrumbs-wrapper\">\r\n      <Breadcrumbs aria-label=\"breadcrumb\">\r\n        <Link color=\"inherit\" onClick={() => history.push('/')} className=\"breadcrumb-link\">\r\n          Menu\r\n        </Link>\r\n        <Typography color=\"textPrimary\" className=\"breadcrumb-page\">{pathname.split('/')[1]}</Typography>\r\n      </Breadcrumbs>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useEffect, useState } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport StorageService from '../../common/services/storage.service';\r\nimport { IGameStatistics } from '../../common/models/models';\r\nimport moment from 'moment';\r\nimport shortid from 'shortid';\r\n\r\nconst useStyles = makeStyles({\r\n  table: {\r\n    minWidth: 375,\r\n  },\r\n});\r\n\r\nexport default function TopList(props: { storageService: StorageService }) {\r\n  const classes = useStyles();\r\n  const [dataSource, setData] = useState<IGameStatistics[]>();\r\n  // const statistics: IGameStatistics[] = props.storageService.getStatisticsData() || [];\r\n  // const dataSource: IGameStatistics[] = statistics.slice().sort((a, b) => b.score - a.score).slice(0, 10);\r\n\r\n  useEffect(() => {\r\n    const getNote = async () => {\r\n      const dataSource: IGameStatistics[] = await props.storageService.getTopData() || [];\r\n      if (dataSource) {\r\n        setData(dataSource);\r\n      }\r\n    };\r\n    getNote();\r\n  }, [props.storageService]);\r\n\r\n  return (\r\n    <div className=\"statistics-wrapper\">\r\n      <h1>Top 10 victories</h1>\r\n      {dataSource && \r\n        (\r\n          <TableContainer component={Paper}>\r\n            <Table className={classes.table} aria-label=\"simple table\">\r\n              <TableHead>\r\n                <TableRow>\r\n                  <TableCell>№</TableCell>\r\n                  <TableCell align=\"center\">Player&nbsp;Name</TableCell>\r\n                  <TableCell align=\"center\">Score</TableCell>\r\n                  <TableCell align=\"center\">Field&nbsp;Size</TableCell>\r\n                  <TableCell align=\"center\">Attempts</TableCell>\r\n                  <TableCell align=\"center\">Time&nbsp;(sec)</TableCell>\r\n                  <TableCell align=\"center\">Date</TableCell>\r\n                </TableRow>\r\n              </TableHead>\r\n              <TableBody>\r\n                {dataSource.map((row: IGameStatistics, index: number) => (\r\n                  <TableRow key={shortid()}>\r\n                    <TableCell component=\"th\" scope=\"row\" align=\"left\"><b>{index + 1}</b></TableCell>\r\n                    <TableCell align=\"center\">\r\n                      {row.playerName}\r\n                    </TableCell>\r\n                    <TableCell align=\"center\">{row.score}</TableCell>\r\n                    <TableCell align=\"center\">{row.fieldSize}</TableCell>\r\n                    <TableCell align=\"center\">{row.attempts}</TableCell>\r\n                    <TableCell align=\"center\">{row.time}</TableCell>\r\n                    <TableCell align=\"center\">{moment(row.createAt).format('MMMM Do YYYY, HH:mm:ss')}</TableCell>\r\n                  </TableRow>\r\n                ))}\r\n              </TableBody>\r\n            </Table>\r\n          </TableContainer>\r\n        )\r\n      }\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport './main.scss';\r\nimport rsschool from './assets/rsschool.svg';\r\nimport { Route, RouteComponentProps, Switch, withRouter } from 'react-router-dom';\r\nimport { ICard, IGameData, ISettings } from '../../../common/models/models';\r\nimport Game from '../../../components/Game/Game';\r\nimport Autoplay from '../../../components/Autoplay/Autoplay';\r\nimport Settings from '../../../components/Settings/Settings';\r\nimport Statistics from '../../../components/Statistics/Statistics';\r\nimport Footer from '../../../components/Footer/Footer';\r\nimport Header from '../../../components/Header/Header';\r\nimport { generateCards } from '../../../common/helpers/game.helper';\r\nimport StorageService from '../../../common/services/storage.service';\r\n// @ts-ignore\r\nimport music from './assets/music.mp3';\r\nimport musicIcon from './assets/music.svg';\r\nimport soundsIcon from './assets/sounds.svg';\r\nimport SoundsControllers from '../../../components/SoundsControllers/SoundsControllers';\r\nimport Menu from '../../../components/Menu/Menu';\r\nimport BreadCrumbs from '../../../components/Breadcrumbs/Breadcrumbs';\r\nimport TopList from '../../../components/TopList/TopList';\r\n\r\ninterface IState {\r\n  cards: ICard[];\r\n  firstCard: ICard | null;\r\n  secondCard: ICard | null;\r\n  settings: ISettings;\r\n  isPaused: boolean;\r\n  isResumed: boolean;\r\n  time: number;\r\n  attempts: number;\r\n  theme: string;\r\n  musicOn: boolean;\r\n  soundsOn: boolean;\r\n}\r\n\r\nclass Main extends React.Component<RouteComponentProps<any>, any> {\r\n  state: IState;\r\n  history: any;\r\n  storageService: StorageService;\r\n  settings: ISettings;\r\n  musicPlayer: any;\r\n  wrapperRef: HTMLElement | null | undefined;\r\n\r\n  constructor(props: any) {\r\n    super(props);\r\n\r\n    this.storageService = new StorageService();\r\n    this.settings = this.storageService.settings;\r\n    this.history = this.props.history;\r\n    this.state = {\r\n      cards: [],\r\n      firstCard: null,\r\n      secondCard: null,\r\n      settings: this.settings,\r\n      isPaused: false,\r\n      isResumed: false,\r\n      time: 0,\r\n      attempts: 0,\r\n      theme: this.settings.theme,\r\n      musicOn: false,\r\n      soundsOn: this.settings.soundOn,\r\n    }\r\n    this.musicPlayer = new Audio(music);\r\n    this.musicPlayer.loop = true;\r\n    this.musicPlayer.volume = this.settings.musicVolume;\r\n  }\r\n\r\n  pausedHandler = (currentGameData: IGameData) => {\r\n    this.history.push('/');\r\n    this.setState({\r\n      isPaused: true,\r\n      cards: currentGameData.cards,\r\n      time: currentGameData.time,\r\n      attempts: currentGameData.attempts,\r\n      settings: currentGameData.settings,\r\n    })\r\n  }\r\n\r\n  resumeHandler = () => {\r\n    this.setState({\r\n      isResumed: true,\r\n    });\r\n    this.history.push('/game');\r\n  }\r\n\r\n  navigationLinkHandler = (e: React.MouseEvent, path: string, name: string) => {\r\n    e.preventDefault();\r\n    if (name === 'New Game') {\r\n      const settings = this.storageService.settings;\r\n      this.setState({\r\n        cards: generateCards(settings),\r\n        isResumed: false,\r\n        settings,\r\n        time: 0,\r\n        attempts: 0,\r\n      });\r\n    }\r\n    this.history.push(path)\r\n  }\r\n\r\n  updateSettingsHandler = (newSettings: ISettings) => {\r\n    this.storageService.updateSettings(newSettings);\r\n    this.setState({\r\n      theme: newSettings.theme,\r\n    });\r\n    this.musicPlayer.volume = newSettings.musicVolume;\r\n  }\r\n\r\n  musicToggle = () => {\r\n    if (!this.state.musicOn) {\r\n      this.musicPlayer.play();\r\n    } else {\r\n      this.musicPlayer.pause();\r\n    }\r\n    this.storageService.musicToggle(!this.state.musicOn);\r\n    this.setState({\r\n      musicOn: !this.state.musicOn,\r\n    })\r\n  }\r\n\r\n  soundsToggle = () => {\r\n    this.storageService.soundsToggle(!this.state.soundsOn);\r\n    this.setState({\r\n      soundsOn: !this.state.soundsOn,\r\n    })\r\n  }\r\n\r\n  soundsOn = () => {\r\n    if (!this.state.soundsOn) {\r\n      this.storageService.soundsToggle(true);\r\n      this.setState({\r\n        soundsOn: true,\r\n      })\r\n    }\r\n  }\r\n\r\n  soundsOff = () => {\r\n    if (this.state.soundsOn) {\r\n      this.storageService.soundsToggle(false);\r\n      this.setState({\r\n        soundsOn: false,\r\n      })\r\n    }\r\n  }\r\n\r\n  musicOn = () => {\r\n    if (!this.state.musicOn) {\r\n      this.musicPlayer.play();\r\n      this.storageService.musicToggle(true);\r\n      this.setState({\r\n        musicOn: true,\r\n      })\r\n    }\r\n  }\r\n\r\n  musicOff = () => {\r\n    if (this.state.musicOn) {\r\n      this.musicPlayer.pause();\r\n      this.storageService.musicToggle(false);\r\n      this.setState({\r\n        musicOn: false,\r\n      })\r\n    }\r\n  }\r\n\r\n  changeTheme = () => {\r\n    const newTheme = this.state.theme === 'dark' ? 'light' : 'dark';\r\n    this.updateSettingsHandler({ ...this.settings, theme: newTheme });\r\n  }\r\n\r\n  hotKeysListener(e: KeyboardEvent) {\r\n    switch(e.code) {\r\n      case 'KeyA':\r\n        this.soundsOn();\r\n        return;\r\n      case 'KeyS':\r\n        this.soundsOff();\r\n        return;\r\n      case 'KeyD':\r\n        this.musicOn();\r\n        return;\r\n      case 'KeyF':\r\n        this.musicOff();\r\n        return;\r\n      case 'KeyT':\r\n        this.changeTheme();\r\n        return;\r\n      default:\r\n        return;\r\n    }\r\n  };\r\n\r\n  componentDidMount() {\r\n    if (this.wrapperRef) {\r\n      window.addEventListener('keydown', this.hotKeysListener.bind(this));\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { location } = this.props;\r\n    return (\r\n      <div className={`wrapper ${this.state.theme === 'dark' ? 'wrapper_theme_dark' : ''}`} ref={element => this.wrapperRef = element}>\r\n        <Header>\r\n          <SoundsControllers\r\n            soundsIcon={soundsIcon}\r\n            musicIcon={musicIcon}\r\n            soundsOn={this.state.soundsOn}\r\n            musicOn={this.state.musicOn}\r\n            soundsToggle={this.soundsToggle}\r\n            musicToggle={this.musicToggle}\r\n          />\r\n          </Header>\r\n        <div className=\"page\">\r\n          {location.pathname !== '/' && location.pathname !== '/game' && <BreadCrumbs location={location}/>}\r\n          <Switch>\r\n            <Route exact path=\"/\">\r\n              <Menu\r\n                isPaused={this.state.isPaused}\r\n                resumeHandler={this.resumeHandler}\r\n                navigationLinkHandler={this.navigationLinkHandler}\r\n              />\r\n            </Route>\r\n            <Route exact path=\"/game\">\r\n              <Game\r\n                {...{ ...this.state, paused: this.pausedHandler, storageService: this.storageService } }\r\n              />\r\n            </Route>\r\n            <Route exact path=\"/autoplay\">\r\n              <Autoplay storageService={this.storageService} />\r\n            </Route>\r\n            <Route exact path=\"/settings\">\r\n              <Settings {...{ storageService: this.storageService, updateSettings: this.updateSettingsHandler }} />\r\n            </Route>\r\n            <Route exact path=\"/statistics\">\r\n              <Statistics storageService={this.storageService} />\r\n            </Route>\r\n            <Route exact path=\"/top\">\r\n              <TopList storageService={this.storageService} />\r\n            </Route>\r\n          </Switch>\r\n        </div>\r\n  \r\n        <Footer logo={rsschool} />\r\n      </div>\r\n    );\r\n  }\r\n\r\n}\r\n\r\nexport default withRouter(Main);\r\n","import React from 'react';\r\nimport './App.css';\r\nimport Main from './layouts/components/Main/Main';\r\nimport { BrowserRouter as Router, Switch } from 'react-router-dom';\r\n\r\nfunction App(match: any) {\r\n  return (\r\n    <div className=\"App\">\r\n      <Router>\r\n        <Switch>\r\n          <Main />\r\n        </Switch>\r\n      </Router>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.scss';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}